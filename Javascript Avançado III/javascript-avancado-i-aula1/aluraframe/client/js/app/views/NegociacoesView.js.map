{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["View","DateHelper","currentInstance","NegociacoesView","elemento","addEventListener","event","target","nodeName","ordena","textContent","toLowerCase","model","negociacoes","map","dataParaTexto","neg","data","quantidade","valor","volume","join","volumeTotal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACIA,gB,WAAAA,I;;AAGAC,sB,wBAAAA,U;;AAGAC,2B,sCAAAA,e;;;;;;;;;;;;;;;;;;;;;uCAGSC,e;;;AAET,yCAAYC,QAAZ,EAAsB;AAAA;;AAAA,kJACZA,QADY;;AAGlB;AACAA,6BAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAAUC,KAAV,EAAiB;AAChD,4BAAIA,MAAMC,MAAN,CAAaC,QAAb,IAAyB,IAA7B,EACIN,kBAAkBO,MAAlB,CAAyBH,MAAMC,MAAN,CAAaG,WAAb,CAAyBC,WAAzB,EAAzB;AACP,qBAHD;AAJkB;AAQrB;;AAED;AACA;;AAEA;;;;;8CACUC,K,EAAO;AACb,oXAYUA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB;AAAA,gGAEVb,WAAWc,aAAX,CAAyBC,IAAIC,IAA7B,CAFU,2CAGVD,IAAIE,UAHM,2CAIVF,IAAIG,KAJM,2CAKVH,IAAII,MALM;AAAA,yBAAtB,EAOCC,IAPD,CAOM,EAPN,CAZV,uHAwBcT,MAAMU,WAxBpB;AA4BH;;;;cA7CgCtB,I","file":"NegociacoesView.js","sourcesContent":["import {\n    View\n} from './View.js';\nimport {\n    DateHelper\n} from '../helpers/DateHelper.js';\nimport {\n    currentInstance\n} from '../controllers/NegociacaoController.js';\n\nexport class NegociacoesView extends View {\n\n    constructor(elemento) {\n        super(elemento);\n\n        // Handling the sort events on the TH in the \"negociacoesView\" DIV due to event bubbling\n        elemento.addEventListener('click', function (event) {\n            if (event.target.nodeName == 'TH')\n                currentInstance().ordena(event.target.textContent.toLowerCase());\n        })\n    }\n\n    // GOOOLD:\n    //1.  String templates allows us to chain js code and strings that will further be inserted in a innerHTML property of an HTML element. In other to return properly only strings, the 'join('')' method is used.\n\n    //2. Inserting chuncks of JS code is also possible via using IIFE (auto invoked function execution). To do so, we need to declare a function and auto execute it to return something. Inside the function, we can add whatever we want.\n    _template(model) {\n        return `\n        <table class=\"table table-hover table-bordered\">\n            <thead>\n                <tr>\n                    <th>DATA</th>\n                    <th>QUANTIDADE</th>\n                    <th>VALOR</th>\n                    <th>VOLUME</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                ${model.negociacoes.map(neg => `\n                    <tr>\n                        <td>${DateHelper.dataParaTexto(neg.data)}</td>\n                        <td>${neg.quantidade}</td>\n                        <td>${neg.valor}</td>\n                        <td>${neg.volume}</td>\n                    </tr>\n                `).join('')}\n            </tbody>\n\n            <tfoot>\n                <td colspan=\"3\">TOTAL</td>\n                <td>${model.volumeTotal}</td>\n            </tfoot>\n        </table>\n        `;\n    }\n\n\n}"]}