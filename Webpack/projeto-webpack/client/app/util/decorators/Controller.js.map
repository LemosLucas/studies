{"version":3,"sources":["../../../app-src/util/decorators/Controller.js"],"names":["controller","seletores","elements","map","seletor","document","querySelector","constructor","constructorOriginal","constructorNovo","instance","Object","getOwnPropertyNames","prototype","forEach","property","Reflect","hasMetadata","associaEvento","getMetadata","metadado","selector","addEventListener","event","prevent","preventDefault","propertyKey"],"mappings":";;;;;;;;;;;;;;;;;;;AAAO,WAASA,UAAT,GAAkC;AAAA,sCAAXC,SAAW;AAAXA,MAAAA,SAAW;AAAA;;AAErC,QAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAc,UAAAC,OAAO;AAAA,aAClCC,QAAQ,CAACC,aAAT,CAAuBF,OAAvB,CADkC;AAAA,KAArB,CAAjB;AAGA,WAAO,UAAUG,WAAV,EAAuB;AAE1B,UAAMC,mBAAmB,GAAGD,WAA5B;;AAEA,UAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAEhC,YAAMC,QAAQ,cAAOF,mBAAP,qBAA8BN,QAA9B,EAAd;;AACAS,QAAAA,MAAM,CACDC,mBADL,CACyBJ,mBAAmB,CAACK,SAD7C,EAEKC,OAFL,CAEa,UAAAC,QAAQ,EAAI;AACjB,cAAIC,OAAO,CAACC,WAAR,CAAoB,WAApB,EAAiCP,QAAjC,EAA2CK,QAA3C,CAAJ,EAA0D;AAEtDG,YAAAA,aAAa,CAACR,QAAD,EACTM,OAAO,CAACG,WAAR,CAAoB,WAApB,EAAiCT,QAAjC,EAA2CK,QAA3C,CADS,CAAb;AAEH;AACJ,SARL;AASH,OAZD;;AAcAN,MAAAA,eAAe,CAACI,SAAhB,GAA4BL,mBAAmB,CAACK,SAAhD;AAEA,aAAOJ,eAAP;AACH,KArBD;AAsBH;;AAED,WAASS,aAAT,CAAuBR,QAAvB,EAAiCU,QAAjC,EAA2C;AAEvCf,IAAAA,QAAQ,CACHC,aADL,CACmBc,QAAQ,CAACC,QAD5B,EAEKC,gBAFL,CAEsBF,QAAQ,CAACG,KAF/B,EAEsC,UAAAA,KAAK,EAAI;AACvC,UAAGH,QAAQ,CAACI,OAAZ,EAAqBD,KAAK,CAACE,cAAN;AACrBf,MAAAA,QAAQ,CAACU,QAAQ,CAACM,WAAV,CAAR,CAA+BH,KAA/B;AACH,KALL;AAMH;;wBArCevB,U","sourcesContent":["export function controller(...seletores) {\n\n    const elements = seletores.map(seletor =>\n        document.querySelector(seletor));\n\n    return function (constructor) {\n\n        const constructorOriginal = constructor;\n\n        const constructorNovo = function () {\n        \n            const instance = new constructorOriginal(...elements);\n            Object\n                .getOwnPropertyNames(constructorOriginal.prototype)\n                .forEach(property => {\n                    if (Reflect.hasMetadata('bindEvent', instance, property)) {\n                        \n                        associaEvento(instance, \n                            Reflect.getMetadata('bindEvent', instance, property));\n                    }\n                });\n        }\n\n        constructorNovo.prototype = constructorOriginal.prototype;\n\n        return constructorNovo;\n    }\n}\n\nfunction associaEvento(instance, metadado) {\n    \n    document\n        .querySelector(metadado.selector)\n        .addEventListener(metadado.event, event => {  \n            if(metadado.prevent) event.preventDefault();\n            instance[metadado.propertyKey](event);\n        });\n}"],"file":"Controller.js"}