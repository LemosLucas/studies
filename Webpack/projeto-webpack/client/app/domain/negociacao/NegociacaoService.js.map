{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","_http","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Promise","all","obtemNegociacoesDaSemana","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,sBAAAA,W;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,oB,+BAAAA,oB;;;mCAEIC,iB;;;AAET,qCAAc;AAAA;;AAEV,eAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;;;qDAE0B;AAEvB,mBAAO,KAAKI,KAAL,CACFC,GADE,CACE,oBADF,EAEFC,IAFE,CAGH,UAAAC,KAAK;AAAA,qBACDA,KAAK,CAACC,GAAN,CAAU,UAAAC,MAAM;AAAA,uBACZ,IAAIR,UAAJ,CAAe,IAAIS,IAAJ,CAASD,MAAM,CAACE,IAAhB,CAAf,EAAsCF,MAAM,CAACG,UAA7C,EAAyDH,MAAM,CAACI,KAAhE,CADY;AAAA,eAAhB,CADC;AAAA,aAHF,EAOH,UAAAC,GAAG,EAAI;AAEH,oBAAM,IAAIZ,oBAAJ,CAAyB,iDAAzB,CAAN;AACH,aAVE,CAAP;AAYH;;;6DAEkC;AAE/B,mBAAO,KAAKE,KAAL,CACFC,GADE,CACE,sBADF,EAEFC,IAFE,CAGH,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,GAAN,CAAU,UAAAC,MAAM;AAAA,uBACrB,IAAIR,UAAJ,CAAe,IAAIS,IAAJ,CAASD,MAAM,CAACE,IAAhB,CAAf,EAAsCF,MAAM,CAACG,UAA7C,EAAyDH,MAAM,CAACI,KAAhE,CADqB;AAAA,eAAhB,CAAJ;AAAA,aAHF,EAMH,UAAAC,GAAG,EAAI;AAEH,oBAAM,IAAIZ,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,aATE,CAAP;AAWH;;;8DAEmC;AAEhC,mBAAO,KAAKE,KAAL,CACFC,GADE,CACE,uBADF,EAEFC,IAFE,CAGH,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,GAAN,CAAU,UAAAC,MAAM;AAAA,uBACrB,IAAIR,UAAJ,CAAe,IAAIS,IAAJ,CAASD,MAAM,CAACE,IAAhB,CAAf,EAAsCF,MAAM,CAACG,UAA7C,EAAyDH,MAAM,CAACI,KAAhE,CADqB;AAAA,eAAhB,CAAJ;AAAA,aAHF,EAMH,UAAAC,GAAG,EAAI;AACH,oBAAM,IAAIZ,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,aARE,CAAP;AAUH;;;;;;;;;;;;;;6BAK2Ba,OAAO,CAACC,GAAR,CAAY,CAC5B,KAAKC,wBAAL,EAD4B,EAE5B,KAAKC,gCAAL,EAF4B,EAG5B,KAAKC,iCAAL,EAH4B,CAAZ,C;;;AAAhBC,sBAAAA,O;wDAKGA,OAAO,CACTC,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,+BAAqBD,SAAS,CAACE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,uBADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,+BAAUA,CAAC,CAAChB,IAAF,CAAOiB,OAAP,KAAmBF,CAAC,CAACf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,uBAFH,C;;;;;AAKPC,sBAAAA,OAAO,CAACC,GAAR;4BACM,IAAI5B,oBAAJ,CAAyB,kDAAzB,C;;;AACT","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(\n            dados =>\n                dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n\n                throw new ApplicationException('Não foi possível obter as negociações da semana');\n            }\n            );\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(\n            dados => dados.map(objeto =>\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n            }\n            );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(\n            dados => dados.map(objeto =>\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n            }\n            );\n    }\n\n    async obtemNegociacoesDoPeriodo() {\n\n        try {\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n\n        } catch (err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período')\n        };\n    }\n}"],"file":"NegociacaoService.js"}